trigger:
- main

variables:
  azureSubscription: 'AZFunction'
  appName: 'HelloFunctionNK'
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  nodeVersion: '20.x'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'NKMachine'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'
    
    - script: |
        npm install
      displayName: 'npm install'
      workingDirectory: $(workingDirectory)
    
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(workingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: drop

- stage: Test
  displayName: Test stage
  dependsOn: Build
  jobs:
  - job: Test
    displayName: Test
    pool:
      name: 'NKMachine'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'
    
    - script: |
        npm install
        npm test
      displayName: 'npm install and test'
      workingDirectory: $(workingDirectory)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Test
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      name: 'NKMachine'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Pipeline.Workspace)'
    
    - task: AzureFunctionApp@1
      displayName: 'Azure Function App Deploy'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appType: 'functionApp'
        appName: '$(appName)'
        package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
        deploymentMethod: 'zipDeploy'